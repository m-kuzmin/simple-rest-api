# https://golangci-lint.run/usage/configuration/
#
# The purpose of the linter is to write safe and sane Go code without interfering with code ergonomics.
# Unfortunately Go has many limitations, some of which are placed on you by this linter.
# Before //nolint:'ing consider other ways to discribe your intent in code.

output:
  sort-results: true

linters:
  enable-all: true
  disable:
    - nlreturn # Already covered by wsl and revive, and they are more permissive.

severity:
  default-severity: error

issues:
  exclude:
    - 'Example[A-Z][\w\d]+_[A-Z][\w\d]+ contains underscore.*' # Examples are required to be ExampleType_Method

# https://golangci-lint.run/usage/linters/
#
# Does the lint rule you are about to add make sense? Could the trigger be avoided by improving code quality?
linters-settings:
  nolintlint:
    require-explanation: true
    require-specific: true

  lll:
    line-length: 120
    tab-width: 4

  tagliatelle:
    case:
      use-field-name: true

  varnamelen:
    ignore-decls:
      - t T
      - t testing.T
      - i int
      - T any
    ignore-names:
      - id
      - ID

  forbidigo:
    analyze-types: true
    forbid:
      - p: ^print.*$
        msg: &shouldUseLoggingPackage all logging in the app should be done through `package logging`.
      - p: ^fmt\.Print.*$
        msg: *shouldUseLoggingPackage
      - p: ^log\..*$
        msg: *shouldUseLoggingPackage
      - p: ^errors\.New$
        msg: &dontCreateDynErrors consider the receiver of this error, how are they going to handle this error?
      - p: ^fmt\.Errorf$
        msg: *dontCreateDynErrors

  govet:
    check-shadowing: true
    enable-all: true
    settings:
      printf:
        funcs:
          - (github.com/m-kuzmin/simple-rest-api/logging.Logger).Tracef
          - (github.com/m-kuzmin/simple-rest-api/logging.Logger).Debugf
          - (github.com/m-kuzmin/simple-rest-api/logging.Logger).Infof
          - (github.com/m-kuzmin/simple-rest-api/logging.Logger).Warnf
          - (github.com/m-kuzmin/simple-rest-api/logging.Logger).Errorf
          - (github.com/m-kuzmin/simple-rest-api/logging.Logger).Fatalf
          - github.com/m-kuzmin/simple-rest-api/api.errorResponsef

  depguard:
    rules:
      All:
        files: [ "!**/*_test.go" ]
        allow:
          - $gostd
          - github.com/gin-gonic/gin
          - github.com/m-kuzmin/simple-rest-api/
      Tests:
        files: [ $test ]
        allow:
          - $gostd
          - github.com/m-kuzmin/simple-rest-api/
          - github.com/stretchr/testify/assert
